<?php
/**
 * @file
 * Code for the OMBU Media feature.
 */

include_once 'ombumedia.features.inc';


/**
 * Hooks.
 */

/**
 * Implements hook_menu().
 */
function ombumedia_menu() {
  $items['admin/dashboard/manage-media'] = array(
    'title' => 'Manage Media',
    'type' => MENU_CALLBACK,
    'page callback' => 'ombumedia_page_magage_media',
    'access arguments' => array('administer files'),
    'file' => 'ombumedia.pages.inc',
  );

  $items['admin/dashboard/select-media'] = array(
    'title' => 'Manage Media',
    'type' => MENU_CALLBACK,
    'page callback' => 'ombumedia_page_select_media',
    'access arguments' => array('administer files'),
    'file' => 'ombumedia.pages.inc',
  );

  $items['admin/dashboard/ombumedia-test'] = array(
    'title' => 'Test media selection',
    'type' => MENU_CALLBACK,
    'page callback' => 'ombumedia_page_test',
    'access arguments' => array('administer files'),
    'file' => 'ombumedia.pages.inc',
  );

  $items['admin/dashboard/manage-media/ajax-upload'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'ombumedia_page_magage_media_ajax_upload',
    'access arguments' => array('administer files'),
    'file' => 'ombumedia.pages.inc',
  );

  $items['file/%file/preview'] = array(
    'page callback' => 'ombumedia_page_file_preview',
    'page arguments' => array(1),
    'access callback' => 'file_entity_access',
    'access arguments' => array('view', 1),
    'file' => 'ombumedia.pages.inc',
  );

  $items['file/%file/select'] = array(
    'page callback' => 'ombumedia_page_file_select',
    'page arguments' => array(1),
    'access callback' => 'file_entity_access',
    'access arguments' => array('view', 1),
    'file' => 'ombumedia.pages.inc',
  );

  return $items;
}

/**
 * Implements hook_admin_paths().
 */
function ombumedia_admin_paths() {
  $paths = array(
    'file/*/preview' => TRUE,
    'file/*/select' => TRUE,
  );
  return $paths;
}

/**
 * Implements hook_theme().
 */
function ombumedia_theme($existing, $type, $theme, $path) {
  return array(
    'ombumedia_select' => array(
      'variables' => array(
        'library' => FALSE,
        'upload' => FALSE,
        'web' => FALSE,
      ),
      'template' => 'ombumedia_select',
    ),
    'ombumedia_file_preview' => array(
      'variables' => array(
        'file' => NULL,
      ),
      'template' => 'ombumedia_file_preview',
    ),
  );
}

/**
 * Implements hook_library().
 */
function ombumedia_library() {
  $libraries = array();

  $path = drupal_get_path('module', 'ombumedia');

  $libraries['ombumedia'] = array(
    'title' => 'OMBU Media',
    'js' => array(
      $path . '/js/ombumedia-util.js' => array(),
      $path . '/js/ombumedia.js' => array(),
      $path . '/js/ombumedia-popup.js' => array(),
      array(
        'type' => 'setting',
        'data' => array(
          'ombumedia' => array(
            'upload' => array(
              'url' => url('admin/dashboard/manage-media/ajax-upload'),
            ),
          ),
        ),
      ),
    ),
    'css' => array(
      $path . '/css/ombumedia.css',
    ),
    'dependencies' => array(
      array('system', 'ui.tabs'),
      array('system', 'ui.dialog'),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_page_alter().
 *
 * This is used to use our alternate template when ?render=media-popup is passed
 * in the URL.
 */
function ombumedia_page_alter(&$page) {
  if (isset($_GET['render']) && $_GET['render'] == 'ombumedia-popup') {
    $page['#theme'] = 'ombumedia_dialog_page';

    // Disable administration modules from adding output to the popup.
    // @see http://drupal.org/node/914786
    module_invoke_all('suppress', TRUE);

    foreach (element_children($page) as $key) {
      if ($key != 'content') {
        unset($page[$key]);
      }
    }
  }
}


/**
 * Preprocess.
 */

/**
 * Implements hook_preprocess_ombumedia_file_preview().
 */
function ombumedia_preprocess_ombumedia_file_preview(&$variables) {
  module_load_include('inc', 'file_entity', 'file_entity.pages');
  $file = $variables['file'];
  $variables['title'] = !empty($file->title) ? $file->title : $file->filename;
  $variables['preview'] = file_view_file($file, 'preview');
  $variables['usage'] = file_entity_usage_page($file);
  if (isset($_GET['destination'])) {
    $url_parts = drupal_parse_url(urldecode($_GET['destination']));
    $variables['back_link'] = l('Back', $url_parts['path'], array(
      'query' => $url_parts['query'],
    ));
  }
}

/**
 * Implements hook_preprocess_views_view_unformatted().
 */
function ombumedia_preprocess_views_view_unformatted(&$variables) {
  if ($variables['view']->name === 'ombumedia') {
    if ($variables['view']->current_display === 'select_media') {
      $results = $variables['view']->result;
      foreach ($variables['rows'] as $i => $row) {
        $fid = $results[$i]->fid;
        $data_fid = 'data-fid="' . $fid . '"';
        $query = drupal_get_query_parameters() + drupal_get_destination();
        $preview_url = url('file/' . $fid . '/preview', array('query' => $query));
        $row = '<a href="' . $preview_url . '" ' . $data_fid . '>' . $row . '</a>';
        $row .= implode(' ', array(
          '<span class="actions">',
            l('Select', 'file/' . $fid . '/select', array('query' => $query)),
          '</span>',
        ));
        $variables['rows'][$i] = $row;
        $variables['classes_array'][$i] .= ' ombumedia-library-file';
      }
    }
  }
}
